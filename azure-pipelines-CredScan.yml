# Docker.
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger: none

resources:
- repo: self

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
        
    
    - task: UsePythonVersion@0
      displayName: "Set Python 3 as default"
      inputs:
        versionSpec: 3

    - task: CmdLine@2
      displayName: "Install detect-secrets using pip"
      inputs:
        script: |
          pip install detect-secrets

    # Optional Uncomment the following section to re-scan for secrets (about 1.5h execution)
    - task: CmdLine@2
      displayName: "Run detect-secrets tool"
      inputs:
        script: |
          detect-secrets scan --exclude-lines '__USER_TEST__' --exclude-lines '__PASS_TEST__' frontend/src/app/oauth/ --all-files > detect-secrets.json

    - task: PublishPipelineArtifact@1
      displayName: "Publish results in the Pipeline Artifact"
      inputs:
        targetPath: "detect-secrets.json"
        artifact: "detect-secrets"
        publishLocation: "pipeline"

    ## Note this build will fail because we have a lot of secrets in the source code.
    - task: PowerShell@2
      displayName: "Analyzing detect-secrets results"
      inputs:
        targetType: 'inline'
        script: |
          $ds = Get-Content detect-secrets.json
          Write-Output $ds
          
          $dsObj = $ds | ConvertFrom-Json
          $num = ($dsObj.results | Get-Member -MemberType NoteProperty).Count
          
          if ($num -gt 0) {
            Write-Host "##vso[task.logissue type=error]Secrets were detected in code."
            exit 1
          }
          else {
            Write-Host "No secrets detected."
          }
        pwsh: true